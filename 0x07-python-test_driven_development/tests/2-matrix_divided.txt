==============================
2-matrix_divided.py
==============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

==========
How to use
==========

``matrix_divided(...)``
returns a new matrix with all the elements divided by ``div``.
==============================================================

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]], 3)
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

    >>> matrix_divided([["Hello", "World"], [6, 7]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[2, 5, 7], [1, 3]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[9, -2], [8, 3]], "Hello")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided("Hello", 9)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[9, -2], [8, 3]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[9, -2], [8, 3]], -2)
    [[-4.5, 1.0], [-4.0, -1.5]]

    >>> matrix_divided([[9, -2], [8, 3]], float('inf'))
    [[0.0, -0.0], [0.0, 0.0]]

    >>> matrix = [[1, 2, 3]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0]]
    >>> print(matrix)
    [[1, 2, 3]]

    >>> matrix_divided([[3, 4]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
