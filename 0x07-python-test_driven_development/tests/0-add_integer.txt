===========================
0-add_integer.py
===========================

This module defines integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)``` 
returns the addition of the two arguments. For numbers, that value is 
equivalent to using the ``+`` operator.
======================================================================

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(1, 3)
    4

    >>> add_integer(6, 2.1)
    8

    >>> add_integer(8)
    106

    >>> add_integer(5, -2)
    3

    >>> add_integer(-4, -4)
    -8

    >>> add_integer(15.0, 10.0)
    25

    >>> add_integer("Python", 8)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(6, "Python")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(1000e1000)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer("Hello", "World")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(float('NaN'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
